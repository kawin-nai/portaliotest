Smart Contract
Portal (Address: 0x2C27eCA09F61c2474E15c80947d00142D4aB9F14) (Goerli Testnet)


Business Process
1.	Normal Route
  1.	Initiate Project [call function createProject(string _name, string memory _description, uint _goal, uint _minGoal)]
  2.	Participants Contribute money -> [Contribute(string _name) +  need to insert value]
      And receive ERC-20 token back
  3.	When money is already full -> [Initiators call Launch (transfer money from main to sub contract)]
  4.	Participants Vote for project [call vote (string _name)] participantsâ€™ ERC-20 token are burned 
  5.	Initiators call [(redeem(string _name, uint_minGoal)] to retrieve part of money and set new goal and ERC-20 token are re-minted back
  6.	 Repeat voting process and redeem
  7.	When the initiators want to retrieve final amount, they have to call redeem(string _name, uint_minGoal = 0)]
  8.	End
2.	Cancel Route
  1.	Initiate Project [call function createProject(string _name, string memory _description, uint _goal, uint _minGoal)]
  2.	Participants Contribute money -> [Contribute (string _name) + need to insert value]
      And receive ERC-20 token back
  3.	When money is already full -> [Initiators call Launch (transfer money from main to sub contract)]
  4.	Participant vote yes and no
  5.	If No > 50%, any participants can call [cancel_project(string _name)] to retrieve money to every addresses
  6.	End
  
Contract ABI:
[
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "Launch",
  "outputs": [],
  "stateMutability": "payable",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "cancel_project",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   },
   {
    "internalType": "address",
    "name": "_address",
    "type": "address"
   }
  ],
  "name": "checkTokenBalance",
  "outputs": [
   {
    "internalType": "uint256",
    "name": "",
    "type": "uint256"
   }
  ],
  "stateMutability": "view",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "checkVault",
  "outputs": [
   {
    "internalType": "uint256",
    "name": "",
    "type": "uint256"
   }
  ],
  "stateMutability": "view",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "contribute",
  "outputs": [],
  "stateMutability": "payable",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   },
   {
    "internalType": "string",
    "name": "_description",
    "type": "string"
   },
   {
    "internalType": "uint256",
    "name": "_goal",
    "type": "uint256"
   },
   {
    "internalType": "uint256",
    "name": "_minGoal",
    "type": "uint256"
   }
  ],
  "name": "createProject",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "customer_redeem",
  "outputs": [],
  "stateMutability": "payable",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "getAllAddressProject",
  "outputs": [
   {
    "internalType": "address[]",
    "name": "",
    "type": "address[]"
   }
  ],
  "stateMutability": "view",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "getCoinAddress",
  "outputs": [
   {
    "internalType": "contract ERC20",
    "name": "",
    "type": "address"
   }
  ],
  "stateMutability": "view",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   },
   {
    "internalType": "uint256",
    "name": "_minGoal",
    "type": "uint256"
   }
  ],
  "name": "redeem",
  "outputs": [],
  "stateMutability": "payable",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "remainingProjectValue",
  "outputs": [
   {
    "internalType": "uint256",
    "name": "",
    "type": "uint256"
   }
  ],
  "stateMutability": "view",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   }
  ],
  "name": "return_isOpen",
  "outputs": [
   {
    "internalType": "bool",
    "name": "",
    "type": "bool"
   }
  ],
  "stateMutability": "view",
  "type": "function"
 },
 {
  "inputs": [
   {
    "internalType": "string",
    "name": "_name",
    "type": "string"
   },
   {
    "internalType": "bool",
    "name": "continue_or_not",
    "type": "bool"
   }
  ],
  "name": "vote",
  "outputs": [],
  "stateMutability": "nonpayable",
  "type": "function"
 }
]
